{"version":3,"sources":["Components/Slider/styled.js","Components/Slider/SliderContainer.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Components/Slider/Slide.js","Components/Slider/Arrow.js","Components/Slider/Slider.js"],"names":["Container","styled","ul","props","translate","transition","width","SVG","div","direction","SlideItem","li","content","InfoContainer","Header","h2","Description","p","SliderCSS","DotContainer","Dot","span","active","SliderContainer","children","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Slide","data","title","productDescription","description","text","imageURL","main_image","url","toLowerCase","slice","Arrow","handleClick","onClick","alt","rightArrow","src","leftArrow","getWidth","window","innerWidth","Slider","slides","items","map","totalNumberOfSlides","useState","activeSlide","state","setState","useEffect","handleDotClick","event","slideNumber","parseInt","id","className","_slide","slide"],"mappings":"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","file":"static/js/5.d7012bd3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.ul`\r\n    transform: translateX(-${props => props.translate}px);\r\n    transition: transform ease-out ${props => props.transition}s;\r\n    height: 100%;\r\n    width: ${props => props.width}px;\r\n    display: flex;\r\n`;\r\n\r\nexport const SVG = styled.div`\r\n    display: flex;\r\n    position: absolute;\r\n    top: calc( 50% - 65px );\r\n    ${props => props.direction === 'right' ? `right: 25px` : `left: 25px`};\r\n    height: 65px;\r\n    width: 65px;\r\n    justify-content: center;\r\n    background: none;\r\n    border: 2px solid white;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    transition: all ease-in 0.1s;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        background: #e4986a;\r\n        border: 2px solid #e4986a;\r\n    }\r\n\r\n    img {\r\n        transform: translateX(${props => props.direction === 'left' ? '-2' : '2'}px);\r\n    }\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n\r\n    @media(max-width: 600px){\r\n        top: calc( 50% - 30px );\r\n        height: 50px;\r\n        width: 50px;\r\n    }\r\n`;\r\n\r\nexport const SlideItem = styled.li`\r\n    height: 100%;\r\n    width: ${props => props.width}px;\r\n    background-image: url('${props => props.content}');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    position: relative;\r\n`;\r\nexport const InfoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    bottom: 25%;\r\n    left: 10%;\r\n\r\n    @media(max-width:600px){\r\n        left: 0%;\r\n        bottom: 70px;\r\n        width: 100%;\r\n        background-color: white;\r\n    }\r\n`;\r\nexport const Header = styled.h2`\r\n    font-family: 'DM Serif Display', serif;\r\n    text-transform: capitalize;\r\n    font-size: 3rem;\r\n    line-height: 49px;\r\n    padding: 2rem;\r\n    padding-bottom:1rem;\r\n    background: white;\r\n\r\n    @media(max-width:600px){\r\n        font-size: 2rem;\r\n        line-height: 30px;\r\n        padding: 1.3rem 2rem 0.5rem;\r\n        white-space: normal;\r\n    }\r\n`;\r\nexport const Description = styled.p`\r\n    font-family: 'Mulish', sans-serif;\r\n    text-transform: capitalize;\r\n    font-weight: 500;\r\n    padding: 0 2rem 2rem 2rem;\r\n    background: white;\r\n\r\n    @media(max-width:600px){\r\n        padding-bottom: 1.3rem;\r\n    }\r\n`;\r\n\r\nexport const SliderCSS = styled.div`\r\n    position: relative;\r\n    width: 100vw;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nexport const DotContainer = styled.div`\r\n    position: absolute;\r\n    bottom: 25px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Dot = styled.span`\r\n    padding: 5px;\r\n    margin-right: 15px;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    background: ${props => props.active ? 'black' : 'white'};\r\n\r\n    @media (max-width: 600px){\r\n        padding: 10px;\r\n        margin: 0 10px;\r\n    }\r\n`;","import React from 'react';\r\nimport { Container } from './styled';\r\n\r\nconst SliderContainer = (props) => {\r\n    return (\r\n        <Container width={props.width} translate={props.translate} transition={props.transition}>\r\n            {props.children}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SliderContainer\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\nimport { SlideItem, InfoContainer, Header, Description } from './styled';\r\n\r\nconst Slide = ({ width, ...props }) => {\r\n    const {\r\n        title,\r\n        description:[\r\n            {text: productDescription}\r\n        ],\r\n        main_image:{\r\n            url: imageURL\r\n        }\r\n    } = props.data;\r\n\r\n    return (\r\n        <SlideItem width={width} content={imageURL}>\r\n            <InfoContainer>\r\n                <Header>{title.toLowerCase()}</Header>\r\n                <Description>{productDescription.length > 30 ? productDescription.slice(0,30): productDescription}</Description>\r\n            </InfoContainer>\r\n            \r\n        </SlideItem>\r\n    );\r\n};\r\n\r\nexport default Slide\r\n","import React from 'react';\r\nimport { SVG } from './styled';\r\n\r\nimport rightArrow from 'assets/svgs/right-arrow.svg' ;\r\nimport leftArrow from 'assets/svgs/left-arrow.svg';\r\n\r\nconst Arrow = ({direction, handleClick}) => {\r\n    return(\r\n        <SVG direction={direction} onClick={handleClick} >\r\n            {direction === 'right' ? <img alt={`${rightArrow}`} src={rightArrow} /> : <img alt={`${leftArrow}`} src={leftArrow} />}\r\n        </SVG>\r\n    );\r\n};\r\n\r\nexport default Arrow\r\n","import React, { useState, useEffect } from 'react';\r\nimport { SliderCSS, DotContainer, Dot } from './styled';\r\nimport SliderContainer from './SliderContainer';\r\nimport Slide from './Slide';\r\nimport Arrow from './Arrow';\r\n\r\nconst getWidth = () => window.innerWidth;\r\n\r\n/**\r\n * @function Slider\r\n */\r\nconst Slider = (props) => {\r\n\t\r\n\tconst slides = props.items.map(i => i);\r\n\tconst totalNumberOfSlides = slides.length - 1;\r\n\r\n\tconst [state, setState] = useState({\r\n\t\tactiveSlide: 0,\r\n\t\ttranslate: 0,\r\n\t\ttransition: 0.45\r\n\t});\r\n\r\n\tconst { activeSlide, translate, transition } = state;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (transition === 0) setState({ ...state, transition: 0.45 });\r\n\t}, [transition, state]);\r\n\r\n\tconst nextSlide = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\r\n\t\t\t//If last slide\r\n\t\t\t//translate to first slide,\r\n\t\t\t//otherwise next slide.\r\n\t\t\ttranslate: activeSlide === totalNumberOfSlides ? 0 : translate + getWidth(),\r\n\t\t\tactiveSlide: activeSlide === totalNumberOfSlides ? 0 : activeSlide + 1\r\n\t\t});\r\n\t};\r\n\r\n\tconst prevSlide = () => {\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\r\n\t\t\t//If first slide\r\n\t\t\t//translate to last slide,\r\n\t\t\t//otherwise previous slide.\r\n\t\t\ttranslate: activeSlide === 0 ? getWidth() * totalNumberOfSlides : translate - getWidth(),\r\n\t\t\tactiveSlide: activeSlide === 0 ? totalNumberOfSlides : activeSlide - 1\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDotClick = (event) => {\r\n\t\tconst slideNumber = parseInt(event.target.id);\r\n\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\ttranslate: getWidth() * slideNumber,\r\n\t\t  \tactiveSlide: slideNumber\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SliderCSS>\r\n\t\t\t<SliderContainer\r\n\t\t\t\ttranslate={translate}\r\n\t\t\t\ttransition={transition}\r\n\t\t\t\twidth={getWidth() * slides.length}\r\n\t\t\t\tclassName={'SliderContent'}\r\n\t\t\t>\r\n\t\t\t\t{slides.map((_slide, i) => {\r\n\t\t\t\t\treturn <Slide width={getWidth()} key={`${_slide.id}${i}`} {..._slide} />\r\n\t\t\t\t})}\r\n\t\t\t</SliderContainer>\r\n\r\n\t\t\t<Arrow direction=\"left\" handleClick={prevSlide} />\r\n\t\t\t<Arrow direction=\"right\" handleClick={nextSlide} />\r\n\t\t\t\r\n\t\t\t<DotContainer>\r\n\t\t\t\t{slides.map((slide, i) => (\r\n\t\t\t\t\t<Dot key={i} id={i} active={activeSlide === i} onClick={handleDotClick} />\r\n\t\t\t\t))}\r\n\t\t\t</DotContainer>\r\n\t\t</SliderCSS>\r\n\t);\r\n};\r\n\r\nexport default Slider\r\n"],"sourceRoot":""}